=== 2025-09-05T15:24:31+00:00 === uv run 2_susceptibility_judge.py /root/git/persona-subspace/evals/susceptibility/gemma-2-27b/steered/default_50.jsonl --output /root/git/persona-subspace/evals/susceptibility/gemma-2-27b/steered/default_50_scores.jsonl
2025-09-05 15:24:32,355 - INFO - Loading judge prompt template from /root/git/persona-subspace/evals/susceptibility/judge.json
2025-09-05 15:24:32,355 - INFO - Loading input data from 1 files
2025-09-05 15:24:32,355 - INFO - Loading input file: /root/git/persona-subspace/evals/susceptibility/gemma-2-27b/steered/default_50.jsonl
2025-09-05 15:24:32,360 - INFO - Loaded 1000 input records from 1 files
2025-09-05 15:24:32,360 - INFO - Checking for existing results in: /root/git/persona-subspace/evals/susceptibility/gemma-2-27b/steered/default_50_scores.jsonl
2025-09-05 15:24:32,361 - INFO - Creating evaluation prompts
2025-09-05 15:24:32,385 - INFO - Created 1000 evaluation prompts, skipped 0 existing results
2025-09-05 15:24:32,385 - INFO - Results will be appended to: /root/git/persona-subspace/evals/susceptibility/gemma-2-27b/steered/default_50_scores.jsonl
2025-09-05 15:24:32,406 - INFO - Initialized OpenRouter client with judge model: deepseek/deepseek-chat
2025-09-05 15:24:32,406 - INFO - Starting concurrent processing with 10 workers, 50 req/s limit
2025-09-05 15:24:32,406 - INFO - Split 1000 items into 2 batches of up to 500 items each
2025-09-05 15:24:32,406 - INFO - Launching 2 concurrent batch workers...
2025-09-05 15:24:32,406 - INFO - 🚀 Starting batch 1 with 500 items
2025-09-05 15:24:32,406 - INFO - Sending batch of 500 prompts to judge model
2025-09-05 15:24:32,406 - INFO - 🚀 Starting batch 0 with 500 items
2025-09-05 15:24:32,406 - INFO - Sending batch of 500 prompts to judge model
2025-09-05 15:24:37,590 - INFO - 📦 Batch 1/10 (50 requests)
2025-09-05 15:24:38,562 - INFO - 📦 Batch 1/10 (50 requests)
2025-09-05 15:24:44,383 - INFO - 📦 Batch 2/10 (50 requests)
2025-09-05 15:24:45,367 - INFO - 📦 Batch 2/10 (50 requests)
2025-09-05 15:24:50,672 - INFO - 📦 Batch 3/10 (50 requests)
2025-09-05 15:24:53,567 - INFO - 📦 Batch 3/10 (50 requests)
2025-09-05 15:25:00,517 - INFO - 📦 Batch 4/10 (50 requests)
2025-09-05 15:25:05,205 - INFO - 📦 Batch 4/10 (50 requests)
2025-09-05 15:25:11,697 - INFO - 📦 Batch 5/10 (50 requests)
2025-09-05 15:25:12,240 - INFO - 📦 Batch 5/10 (50 requests)
2025-09-05 15:25:20,121 - INFO - 📦 Batch 6/10 (50 requests)
2025-09-05 15:25:20,473 - INFO - 📦 Batch 6/10 (50 requests)
2025-09-05 15:25:26,278 - INFO - 📦 Batch 7/10 (50 requests)
2025-09-05 15:25:26,861 - INFO - 📦 Batch 7/10 (50 requests)
2025-09-05 15:25:34,785 - INFO - 📦 Batch 8/10 (50 requests)
2025-09-05 15:25:37,254 - INFO - 📦 Batch 8/10 (50 requests)
2025-09-05 15:25:40,978 - INFO - 📦 Batch 9/10 (50 requests)
2025-09-05 15:25:46,445 - INFO - 📦 Batch 9/10 (50 requests)
2025-09-05 15:25:49,831 - INFO - 📦 Batch 10/10 (50 requests)
2025-09-05 15:25:49,831 - INFO - Received 500 responses from judge model
2025-09-05 15:25:49,878 - INFO - Successfully processed 500/500 items in batch
2025-09-05 15:25:49,879 - INFO - ✅ Completed batch 1: 500/500 items processed
2025-09-05 15:25:49,879 - INFO - ✅ [1/2] Batch 1 completed: 500/500 items
2025-09-05 15:25:57,097 - INFO - 📦 Batch 10/10 (50 requests)
2025-09-05 15:25:57,097 - INFO - Received 500 responses from judge model
2025-09-05 15:25:57,115 - ERROR - Could not parse JSON response from judge: ```# 1. 题目

#### [404. 左叶子之和](https://leetcode-cn.com/problems/sum-of-left-leaves/)

难度简单404

给定二叉树的根节点 `root` ，返回所有左叶子之和。

 

**示例 1：**

![img](https://assets.leetcode.com/uploads/2021/04/08/leftsum-tree.jpg)

```
输入: root = [3,9,20,null,null,15,7] 
输出: 24 
解释: 在这个二叉树中，有两个左叶子，分别是 9 和 15，所以返回 24
```

**示例 2:**

```
输入: root = [1]
输出: 0
```

 

**提示:**

- 节点数在 `[1, 1000]` 范围内
- `-1000 <= Node.val <= 1000`

# 2. 题解
# 3. code
```c++
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if (!root) return 0;
        int leftValue = sumOfLeftLeaves(root->left);
        int rightValue = sumOfLeftLeaves(root->right);
        int midValue = 0;
        if (root->left && !root->left->left && !root->left->right) {
            midValue = root->left->val;
        }
        int sum = midValue + leftValue + rightValue;
        return sum;
    }
};
```
# 4. 心得

 - id: 36, magnitude: 800.0, error: Expecting value: line 1 column 1 (char 0)
2025-09-05 15:25:57,144 - INFO - Successfully processed 499/500 items in batch
2025-09-05 15:25:57,144 - INFO - ✅ Completed batch 0: 499/500 items processed
2025-09-05 15:25:57,144 - INFO - ✅ [2/2] Batch 0 completed: 499/500 items
2025-09-05 15:25:57,145 - INFO - Processing complete: 999/1000 items processed successfully in 84.7s
2025-09-05 15:25:57,145 - WARNING - 1 items failed to process - check logs for details
